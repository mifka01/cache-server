from typing import Callable, Optional, List

class InfoHash:
    @staticmethod
    def get(key: str) -> "InfoHash": ...

class Value:
    def __init__(self, data: bytes) -> None: ...
    @property
    def data(self) -> bytes: ...

class DhtRunner:
    def __init__(self) -> None: ...
    def run(self, port: int = ..., identity: Optional[str] = ...) -> None: ...
    def shutdown(self) -> None: ...
    def bootstrap(self, host: str, port: str) -> None: ...
    def put(self, key: InfoHash, value: Value, done_cb: Optional[Callable[[], None]] = None, permanent: bool = False) -> None: ...
    def get(self, key: InfoHash,
            get_cb: Optional[Callable[[Value], None]] = ...,
            done_cb: Optional[Callable[[], None]] = ...) -> Optional[List[Value]]: ...
    def isRunning(self) -> bool: ...

